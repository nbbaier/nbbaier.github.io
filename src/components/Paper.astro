---
import { getEntries, getEntry } from "astro:content";
import Link from "./Link.astro";

interface Props {
   id: string;
}

const { id } = Astro.props;

const paper = await getEntry("output", id);
const authors = paper?.data.author
   ? await getEntries(paper?.data.author)
   : undefined;
---

{
   paper ? (
      <div class="flex flex-col gap-1 p-2 border rounded">
         <div class="font-semibold ">{paper.data.title}</div>
         <div class="flex flex-row gap-1.5 text-sm">
            {paper.data.issued["date-parts"][0][0]},{" "}
            {paper.data["container-title"]}
            {/* {paper.data.link.map((link) => {
               return (
                  <>
                     <span>|</span>
                     <Link underline to={link.url} title={link.label}>
                        {link.label}
                     </Link>
                  </>
               );
            })} */}
         </div>

         {authors && (
            <div class="text-sm">
               {authors.map((author, index) =>
                  author.data.url ? (
                     <Link to={author.data.url} title={author.data.family}>
                        {`${author.data.given} ${author.data.family}`}
                        {index < authors.length - 1 && ", "}
                     </Link>
                  ) : (
                     <span>
                        {`${author.data.given} ${author.data.family}`}
                        {index < authors.length - 1 && ", "}
                     </span>
                  )
               )}
            </div>
         )}
      </div>
   ) : (
      <div class="font-semibold">{id} not found</div>
   )
}
